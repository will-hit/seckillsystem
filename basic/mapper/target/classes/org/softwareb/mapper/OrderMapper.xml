<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.softwareb.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="org.softwareb.entity.Order" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="receiver_address" property="receiverAddress" jdbcType="CHAR" />
    <result column="receiver_phone" property="receiverPhone" jdbcType="CHAR" />
    <result column="receiver_name" property="receiverName" jdbcType="CHAR" />
    <result column="transacton_id" property="transactonId" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, pid, uid, money, create_time, pay_time, status, receiver_address, receiver_phone, 
    receiver_name, transacton_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.softwareb.entity.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from order_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from order_
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from order_
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.softwareb.entity.OrderExample" >
    delete from order_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.softwareb.entity.Order" >
    insert into order_ (id, pid, uid, 
      money, create_time, pay_time, 
      status, receiver_address, receiver_phone, 
      receiver_name, transacton_id)
    values (#{id,jdbcType=BIGINT}, #{pid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{money,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{payTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=CHAR}, #{receiverAddress,jdbcType=CHAR}, #{receiverPhone,jdbcType=CHAR}, 
      #{receiverName,jdbcType=CHAR}, #{transactonId,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.softwareb.entity.Order" keyProperty="id" useGeneratedKeys="true">
    insert into order_
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="receiverAddress != null" >
        receiver_address,
      </if>
      <if test="receiverPhone != null" >
        receiver_phone,
      </if>
      <if test="receiverName != null" >
        receiver_name,
      </if>
      <if test="transactonId != null" >
        transacton_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="receiverAddress != null" >
        #{receiverAddress,jdbcType=CHAR},
      </if>
      <if test="receiverPhone != null" >
        #{receiverPhone,jdbcType=CHAR},
      </if>
      <if test="receiverName != null" >
        #{receiverName,jdbcType=CHAR},
      </if>
      <if test="transactonId != null" >
        #{transactonId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.softwareb.entity.OrderExample" resultType="java.lang.Integer" >
    select count(*) from order_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.receiverAddress != null" >
        receiver_address = #{record.receiverAddress,jdbcType=CHAR},
      </if>
      <if test="record.receiverPhone != null" >
        receiver_phone = #{record.receiverPhone,jdbcType=CHAR},
      </if>
      <if test="record.receiverName != null" >
        receiver_name = #{record.receiverName,jdbcType=CHAR},
      </if>
      <if test="record.transactonId != null" >
        transacton_id = #{record.transactonId,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_
    set id = #{record.id,jdbcType=BIGINT},
      pid = #{record.pid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      money = #{record.money,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=CHAR},
      receiver_address = #{record.receiverAddress,jdbcType=CHAR},
      receiver_phone = #{record.receiverPhone,jdbcType=CHAR},
      receiver_name = #{record.receiverName,jdbcType=CHAR},
      transacton_id = #{record.transactonId,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.softwareb.entity.Order" >
    update order_
    <set >
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="receiverAddress != null" >
        receiver_address = #{receiverAddress,jdbcType=CHAR},
      </if>
      <if test="receiverPhone != null" >
        receiver_phone = #{receiverPhone,jdbcType=CHAR},
      </if>
      <if test="receiverName != null" >
        receiver_name = #{receiverName,jdbcType=CHAR},
      </if>
      <if test="transactonId != null" >
        transacton_id = #{transactonId,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.softwareb.entity.Order" >
    update order_
    set pid = #{pid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      money = #{money,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=CHAR},
      receiver_address = #{receiverAddress,jdbcType=CHAR},
      receiver_phone = #{receiverPhone,jdbcType=CHAR},
      receiver_name = #{receiverName,jdbcType=CHAR},
      transacton_id = #{transactonId,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>